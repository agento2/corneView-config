/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define TRI     3

#define MO_TOG(layer) &mo_tog layer layer //momentary on hold, toggle on tap

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <TRI>;
        };
    };

    macros {
        lockdascreen: lockdascreen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LEFT_CONTROL &kp Q>;
            label = "LOCKDASCREEN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |||||  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |||||  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |||||  N  |  M   |  ,  |  .  |  /  |
            //                    | GUI | LWR | SPC ||||| ENT | RSE  | BKSP |

            bindings = <
  &kp Q  &kp W  &kp E     &kp R        &kp T                   &kp Y                 &kp U        &kp I          &kp O    &kp P
  &kp A  &kp S  &kp D     &kp F        &kp G                   &kp H                 &kp J        &kp K          &kp L    &kp SEMI
  &kp Z  &kp X  &kp C     &kp V        &kp B                   &kp N                 &kp M        &kp COMMA      &kp DOT  &kp FSLH
                &kp LGUI  &mo_tog 1 1  &mt LEFT_SHIFT SPACE    &mt LEFT_SHIFT ENTER  &mo_tog 2 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | BT1   | BT2 | BT3 | BT4 | BT5 |||||  1  |  2  |  3  |  UP |  DWN | 
            // | BTCLR |     |     |     |     |||||  4  |  5  |  6  | LFT |  RhT | 
            // | SHFT  |     |     |     |     |||||  7  |  8  |  9  |  0  |      |
            //               | GUI |     | SPC ||||| ENT |     | ALT |

            bindings = <
  &kp ESCAPE      &none  &none     &none   &none                   &kp PG_UP             &none           &kp UP_ARROW    &none      &kp PAGE_DOWN
  &kp TAB         &none  &none     &none   &none                   &kp HOME              &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp END
  &kp LEFT_SHIFT  &none  &none     &none   &none                   &none                 &none           &none           &none      &none
                         &kp LGUI  &trans  &mt LEFT_SHIFT SPACE    &mt LEFT_SHIFT ENTER  &trans          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |||||  ^  |  &  |  *  |  (  |  )  |
            // |  `  |     |     |     |     |||||  -  |  =  |  [  |  ]  |  \  |
            // |  ~  |     |     |     |     |||||  _  |  +  |  {  |  }  | "|" |
            //                    | GUI |     | SPC ||||| ENT |     | ALT |

            bindings = <
  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                  &kp NUMBER_6          &kp N7            &kp N8         &kp N9      &kp N0
  &kp GRAVE     &none         &none         &kp SQT       &none                   &kp MINUS             &kp EQUAL         &kp LBKT       &kp RBKT    &kp BSLH
  &none         &none         &none         &none         &none                   &kp RIGHT_ALT         &kp LEFT_CONTROL  &kp COMMA      &kp PERIOD  &kp SQT
                              &kp LGUI      &trans        &mt LEFT_SHIFT ENTER    &mt LEFT_SHIFT SPACE  &trans            &kp BACKSPACE
            >;
        };

        tri_layer {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |||||  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |     |     |||||  -  |  =  |  [  |  ]  |  \  |
            // |     |     |     |     |     |||||  _  |  +  |  {  |  }  | "|" |
            //                    | GUI |     | SPC ||||| ENT |     | ALT |

            bindings = <
  &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &none   &bt BT_CLR              &kp PLUS              &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTRK
  &none          &none         &none         &none   &none                   &kp MINUS             &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH
  &lockdascreen  &none         &none         &none   &none                   &kp N0                &kp N7        &kp N8        &kp N9        &kp ENTER
                               &kp LGUI      &trans  &mt LEFT_SHIFT SPACE    &mt LEFT_SHIFT ENTER  &trans        &kp RALT
            >;
        };
    };
};
