/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define TRI     3

#define MO_TOG(layer) &mo_tog layer layer //momentary on hold, toggle on tap

/ {
        behaviors {
                mo_tog: behavior_mo_tog {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "hold-preferred";
                tapping-term-ms = <200>;
                bindings = <&mo>, <&tog>;
                };
        };
        
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <LOWER RAISE>;
                        then-layer = <TRI>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |||||  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |||||  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |||||  N  |  M   |  ,  |  .  |  /  |
//                    | GUI | LWR | SPC ||||| ENT | RSE  | BKSP |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T                &kp Y &kp U  &kp I     &kp O   &kp P    
   &kp A &kp S &kp D &kp F &kp G                &kp H &kp J  &kp K     &kp L   &kp SEMI 
   &kp Z &kp X &kp C &kp V &kp B                &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
        &kp LGUI MO_TOG(LOWER) &kp SPACE        &kp RET  MO_TOG(RAISE)  &kp BKSP
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | BT1   | BT2 | BT3 | BT4 | BT5 |||||  1  |  2  |  3  |  UP |  DWN | 
// | BTCLR |     |     |     |     |||||  4  |  5  |  6  | LFT |  RhT | 
// | SHFT  |     |     |     |     |||||  7  |  8  |  9  |  0  |      |
//               | GUI |     | SPC ||||| ENT |     | ALT |
                        bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &kp N1   &kp N2   &kp N3 &kp UP  &kp DOWN 
   &bt BT_CLR   &trans       &trans        &trans        &trans              &kp N4   &kp N5   &kp N6 &kp LEFT  &kp RIGHT 
   &kp LSHFT    &trans       &trans        &trans        &trans              &kp N7   &kp N8   &kp N9 &kp N0    &trans   
                             &kp LGUI      &trans        &kp SPACE           &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |||||  ^  |  &  |  *  |  (  |  )  |
// |  `  |     |     |     |     |||||  -  |  =  |  [  |  ]  |  \  |
// |  ~  |     |     |     |     |||||  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC ||||| ENT |     | ALT |
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR
   &kp GRAVE   &trans &trans   &trans   &trans   &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH 
   &kp TILDE   &trans &trans   &trans   &trans   &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE 
                &kp LGUI &trans   &kp SPACE      &kp RET   &trans    &kp RALT
                        >;
                };

                tri_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |||||  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |||||  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |||||  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC ||||| ENT |     | ALT |
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR
   &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH
   &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE
                &kp LGUI &trans   &kp SPACE      &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
